name: Build & Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  SOLUTION_PATH: "Elkhorn.sln"

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage"

      # Publish test results to GitHub (pr comment, checks section, etc.)
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: (!cancelled())
        with:
          files: |
            **/TestResults/*.trx
            
      # Keep a copy of the test results for a day
      - name: Upload test result files
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/**/TestResults/*.trx
          retention-days: 1
          
      # Combines the individual project coverage reports into a single report.
      - name: Combine coverage reports
        uses: danielpalme/ReportGenerator-GitHub-Action@5.4.4
        with:
          reports: '**/*.cobertura.xml'
          targetdir: '${{ github.workspace }}'
          title: 'Code Coverage'
          reporttypes: 'Cobertura'
          classfilters: '-*Command;-*Result;-*DependencyInjection'
          tag: '${{ github.run_number }}_${{ github.run_id }}'
          
      # Generates a code coverage summary from the Cobertura code coverage files. requires Linux runner.
      - name: Generate code coverage summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'Cobertura.xml'
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "50 70"

      - name: Publish code coverage summary to PR
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      # Keep a copy of the coverage report for a day
      - name: Upload combined coverage report artifact
        if: ${{ inputs.upload_coverage }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{ github.workspace }}/Cobertura.xml
          retention-days: 1    