name: Build & Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        project: [ API.Weather ]
      
      #    permissions:
      #      contents: read
      #      issues: read
      #      checks: write
      #      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore src/${{ matrix.project }}

      - name: Build project
        run: dotnet build src/${{ matrix.project }} --configuration Release --no-restore

      - name: Run tests
        run: dotnet test test/unit/${{ matrix.project }}.Tests --collect:"XPlat Code Coverage" --logger trx

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ always() }} # run even if tests fail
        with:
          name: test-results-${{ matrix.project }}
          path: |
            ${{ matrix.project }}/TestResults/*.trx
            ${{ matrix.project }}/TestResults/**/coverage.cobertura.xml
          retention-days: 1

  publish-results:
    name: Publish Results
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'pull_request'

    steps:
      - name: Download test results - API.Weather
        uses: actions/download-artifact@v4
        with:
          name: test-results-API.Weather
          path: TestResults/API.Weather

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: (!cancelled())
        with:
          files: |
            TestResults/**/*.trx

      # [requires Linux runner]
      - name: Generate coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: TestResults/**/coverage.cobertura.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: file
          thresholds: "50 70"

      - name: Publish coverage report
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md